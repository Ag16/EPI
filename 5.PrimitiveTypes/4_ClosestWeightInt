/*Program to find the closeset number with the same weight where weight is defined as the nubmer of 1s in the number's binary representation*/
#include <iostream>

using namespace std;

unsigned long int findClosest(unsigned long int num);

int main(){
	cout<<findClosest(848)<<endl;
	return 0;
}

unsigned long int findClosest(unsigned long int num){
	int prev = num & 1;
	int count = 0;
	int i = 1;
	int next = (num >> i) & 1;
	while(prev == next && i<16){
		prev = next;
		next = (num >> ++i) & 1;
		count++;
	}
	//count is the number of right shifts required to get the first of the 2 first non equal bits starting from the LSB
	if(((num >> count) & 1) != (num >> (count+1) & 1)){
		num = num ^ (1<<count | 1<<(count + 1));
	}
	return num;
}

